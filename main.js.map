{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/validationConfig.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["// отрытия МО\nfunction openPopup(popup) {\n  popup.classList.add('popup_is-opened');\n  document.addEventListener('keydown', escapeHandler);\n  popup.addEventListener('click', closeByOverlay);\n};\n\n// закрытиe МО\nfunction closePopup(popup) {\n  popup.classList.remove('popup_is-opened');\n  document.removeEventListener('keydown', escapeHandler);\n  popup.removeEventListener('click', closeByOverlay);\n};\n\n// закрытие МО по Esc\nfunction escapeHandler (evt) {\n  if (evt.key === \"Escape\") {\n    closePopup(document.querySelector('.popup_is-opened'));\n  };\n};\n\n// Закрытие МО по оверлей\nfunction closeByOverlay(item) {\n  if (item.target === item.currentTarget){\n    closePopup(item.target);\n  }\n};\n\nexport { openPopup, closePopup}","export function createCard(cardContent, user, showImage, hdc, hlb) {\n\n  const cardTemplate = document.querySelector('#card-template').content;\n\n  const cardItem = cardTemplate.querySelector('.card').cloneNode(true);\n  const cardImage = cardItem.querySelector('.card__image');\n  const cardTitle = cardItem.querySelector('.card__title')\n  const deleteButton = cardItem.querySelector('.card__delete-button');\n  const likeButton = cardItem.querySelector('.card__like-button');\n  const likeCount = cardItem.querySelector('.card__like-count');\n\n  cardImage.src = cardContent.link;\n  cardImage.alt = cardContent.name;\n  cardTitle.textContent = cardContent.name;\n\n  // Проверка пользователя у карточек\n  if (cardContent.owner._id !== user._id) {\n    deleteButton.style.display = 'none';\n    deleteButton.disabled = true;\n  } else {\n    deleteButton.addEventListener('click', () => hdc(cardItem, cardContent));\n  };\n\n  // Проверка userID у LIKE\n  const matchUserId = cardContent.likes.some((id) => {return id._id === user._id});\n  if (matchUserId) {\n    likeButton.classList.add('card__like-button_is-active');\n  };\n\n  // Обновление счетчиков\n  likeCount.textContent = cardContent.likes.length;\n\n  likeButton.addEventListener('click', evt => hlb(evt.target, cardContent._id));\n  cardImage.addEventListener('click', showImage);\n\n  return cardItem;\n};\n\n// Удаление карточки\nexport function deleteCard(element, message) {\n  element.remove();\n  console.log(message);\n}\n\n// Проверка наличия лайка\nexport const statusLikeBtn = (likeBtn) => {\n  return likeBtn.classList.contains('card__like-button_is-active');\n};\n\n// Обновление состояния кнопки like и счетчика\nexport const updateLike = (btn, count) => {\n  btn.classList.toggle('card__like-button_is-active')\n  btn.nextElementSibling.textContent = count.likes.length;\n}","const config = {\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-29',\n  headers: {\n    authorization: '2a027149-b10c-4632-913a-0fa2880270f5',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst handleResponse = (res) => {\n  if (res.ok) {\n    return res.json()\n  }\n    return Promise.reject(`Ошибка: ${res.status}`);\n};\n\n// Запрос массива карточек\nexport const getCards = () => {\n  return fetch (`${config.baseUrl}/cards`, {\n    headers: config.headers\n  })\n  .then(handleResponse)\n}\n\n// Запрос данных пользователя\nexport const getUser = () => {\n  return fetch (`${config.baseUrl}/users/me`, {\n    headers: config.headers\n  })\n  .then(handleResponse)\n}\n\n// Запрос на УДАЛЕНИЕ карточки\nexport const deleteCardAPI = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\n    method: 'DELETE',\n    headers:  config.headers,\n  })\n  .then(handleResponse)\n}\n\n// Запрос на размещение данных НОВОЙ карточки\nexport const postCard = (newName, newLink) => {\n  return fetch(`${config.baseUrl}/cards`, {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: newName,\n      link: newLink\n    })\n  })\n  .then(handleResponse)\n}\n\n// Запрос при постановке LIKE\nexport const putLike = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: 'PUT',\n    headers: config.headers,\n  })\n  .then(handleResponse)\n}\n\n// Запрос при снятии LIKE\nexport const deleteLike = (cardId) => {\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n    method: 'DELETE',\n    headers: config.headers,\n  })\n  .then(handleResponse)\n}\n\n// редактирование ПРОФИЛЯ\nexport const editUser = (newName, newDecription) => {\n  return fetch(`${config.baseUrl}/users/me`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: newName,\n      about: newDecription\n    })\n  })\n  .then(handleResponse)\n};\n\n// редактирование АВАТАРА\nexport const editAvatar = (newAvatar) => {\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: newAvatar\n    })\n  })\n  .then(handleResponse)\n};","// добавление классов с ошибкой\nconst showError = (formElement, inputElement, errorMessage, config) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(config.inputErrorClass);\n  errorElement.classList.add(config.errorClass);\n  errorElement.textContent = errorMessage;\n};\n\n// удаление классов с ошибкой\nconst hideError = (formElement, inputElement, config) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.remove(config.inputErrorClass);\n  errorElement.classList.remove(config.errorClass);\n  errorElement.textContent = '';\n};\n\n// проверка валидности полей\nconst isValid = (formElement, inputElement, config) => {\n\n  if (inputElement.validity.patternMismatch) {\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    inputElement.setCustomValidity(\"\");\n  }\n\n  if (!inputElement.validity.valid) {\n    showError(formElement, inputElement, inputElement.validationMessage, config);\n  } else {\n    hideError(formElement, inputElement, config);\n  }\n};\n\n// поиск невалидного поля: метод some\nconst hasInvalidInput = (inputList) => {\n  return inputList.some((inputElement) => {\n    return !inputElement.validity.valid;\n  });\n}\n\n// зависимость состояния кнопок\nconst toggleButtonState = (inputList, buttonElement, config) => {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(config.inactiveButtonClass);\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(config.inactiveButtonClass);\n  }\n};\n\n// слушатели на полях ввода\nconst setEventListeners = (formElement, config) => {\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\n  toggleButtonState(inputList, buttonElement, config);\n  inputList.forEach((inputElement) => {\n    inputElement.addEventListener('input', () => {\n      isValid(formElement, inputElement, config);\n      toggleButtonState(inputList, buttonElement, config);\n    });\n  });\n};\n\nexport const enableValidation = (config) => {\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\n  formList.forEach((formElement) => {\n    setEventListeners(formElement, config);\n  });\n};\n\n// Функция для очистки ошибок валидации\nexport const clearValidation = (formElement, config) => {\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\n  \n  inputList.forEach((inputElement) => {\n      hideError(formElement, inputElement, config);\n      inputElement.value = ''; // сброс инпутов\n  });\n\n  toggleButtonState(inputList, buttonElement, config);\n};","export const config = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n}","import '../pages/index.css';\nimport {closePopup, openPopup} from './modal.js';\nimport {createCard, deleteCard, updateLike, statusLikeBtn} from './card.js';\nimport {getCards,\n        getUser,\n        deleteCardAPI,\n        postCard,\n        putLike,\n        deleteLike,\n        editUser,\n        editAvatar\n        } from './api.js';\nimport {enableValidation,\n        clearValidation\n        } from './validation.js';\nimport {config} from './validationConfig.js'\n\n// кнопки \"редактировать\", \"добавить\", \"закрыть\"\nconst editButton = document.querySelector('.profile__edit-button');\nconst addButton = document.querySelector('.profile__add-button');\nconst closeButtons = document.querySelectorAll('.popup__close');\nconst avatarButton = document.querySelector('.profile__image-button');\n\n// модальные окна (МО)\nconst popupEdit = document.querySelector('.popup_type_edit');\nconst popupNewCard = document.querySelector('.popup_type_new-card');\nconst popupImage = document.querySelector('.popup_type_image');\nconst popupAvatar = document.querySelector('.popup_type_avatar');\n\n// массив МО\nconst popups = [popupEdit, popupNewCard, popupImage, popupAvatar];\n\n// формы МО\nconst editProfile = document.forms.editProfile;\nconst newPlace = document.forms.newPlace;\nconst newAvatar = document.forms.newAvatar;\n\n// поля МО ПРОФИЛЬ\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\n// поле МО АВАТАР\nconst profileAvatar = document.querySelector('.profile__image');\n\n// контейнер списка карточек\nconst placesList = document.querySelector('.places__list');\n\n// заполнение полей МО ПРОФИЛЬ\nfunction typeFields () {\n  editProfile.name.value = profileTitle.textContent;\n  editProfile.description.value = profileDescription.textContent;\n};\n\n// слушатель на кнопке ПРОФИЛЬ\neditButton.addEventListener('click', function() {\n  clearValidation(popupEdit, config);\n  typeFields(); //заполнение полей формы\n  openPopup(popupEdit);\n});\n\n// слушатель на кнопке ДОБАВИТЬ карточку\naddButton.addEventListener('click', function() {\n  clearValidation(popupNewCard, config);\n  openPopup(popupNewCard);\n});\n\n// слушатель на кнопке АВАТАР\navatarButton.addEventListener('click', function() {\n  clearValidation(popupAvatar, config);\n  openPopup(popupAvatar);\n})\n\n// слушатель на массиве кнопок ЗАКРЫТЬ\ncloseButtons.forEach((btn) => {\n  const popup = btn.closest('.popup')\n  btn.addEventListener('click', () => {\n      closePopup(popup);\n  });\n});\n\n// сборка МО с изображением\nfunction createImagePopup (evt) {\n  const image = document.querySelector('.popup__image');\n  const caption = document.querySelector('.popup__caption');\n  image.src = evt.target.src;\n  image.alt = evt.target.alt\n  caption.textContent = evt.target.alt;\n}\n\n// открытия МО с изображением\nfunction showImage (evt) {\n  if (evt.target.classList.contains('card__image')) {\n    createImagePopup(evt);\n    openPopup(popupImage);\n  };\n}\n\n// слушатель на форме ПРОФИЛЯ\neditProfile.addEventListener('submit', profileFormSubmit);\n\n// обработчик формы МО ПРОФИЛЯ\nfunction profileFormSubmit(evt) {\n  evt.preventDefault(); // сброс стандарного повведения формы\n  renderLoad(true, evt.target);\n  editUser(editProfile.name.value, editProfile.description.value)\n  .then(data => {\n    profileTitle.textContent = data.name; // получение значения name\n    profileDescription.textContent = data.about; // получение значения description\n    console.log(`Имя: ${data.name}\\nОписание: ${data.about}`);\n  })\n  .then(() => {\n    closePopup(popupEdit)\n  })\n  .catch((err) => console.log(err))\n  .finally(() => {\n    renderLoad(false, evt.target);\n  });\n};\n\n// слушалетль на форме новой КАРТОЧКИ\nnewPlace.addEventListener('submit', newPlaceFormSubmit);\n\n// обработчик формы МО новой КАРТОЧКИ\nfunction newPlaceFormSubmit(evt){\n  evt.preventDefault(); // сброс стандартного поведения кнопки\n  renderLoad(true, evt.target); // \"спиннер\"\n \n  postCard(newPlace.placeName.value, newPlace.link.value)\n  .then((card) => {\n    const cardItem = createCard(card, card.owner, showImage, hdc, hlb);\n    placesList.prepend(cardItem);\n    newPlace.reset();\n    closePopup(popupNewCard);\n  })\n  .catch(err => console.log(err))\n  .finally(() => {\n    renderLoad(false, evt.target);\n  })\n};\n\n// Редактирование АВАТАРА\nnewAvatar.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n  renderLoad(true, evt.target);\n  editAvatar(evt.target.avatar.value)\n  .then(data => {\n    profileAvatar.style.background = `url(${data.avatar}) center / cover`;\n    console.log('Ссылка на аватар ' + data.avatar)\n  })\n  .then(() => {\n    closePopup(popupAvatar);\n  })\n  .catch(err => console.log(err))\n  .finally(() => {\n    renderLoad(false, evt.target);\n  })\n});\n\n// анимация открытия МО\npopups.forEach((item) => {\n  item.classList.add('popup_is-animated');\n})\n\n// \"Спиннер\"\nfunction renderLoad(isLoad, form) {\n  form.button.textContent = isLoad ? 'Сохранение...' : 'Сохранить'; // Условный (тернарный) оператор\n};\n\n// первоначальная загрузка cards & user\nPromise.all([\n  getCards(),\n  getUser()\n])\n.then(([cards, user]) => {\n  // данные профиля\n  profileTitle.textContent = user.name;\n  profileDescription.textContent = user.about;\n  profileAvatar.style.background = `url(${user.avatar}) center / cover`;\n  // цикл массива данных карточек\n  cards.forEach((card) => {\n    const cardItem = createCard(card, user, showImage, hdc, hlb);\n    placesList.append(cardItem);\n  })\n})\n.catch((err) => console.log(err));\n\n// удаление карточки\n// hdc - handler of delete button of card\nconst hdc = (item, cardId) => {\n  deleteCardAPI(cardId._id)\n  .then((data) => deleteCard(item, data.message))\n  .catch((err) => console.log(err));\n}\n\n// обновление obj.likes.Array\n// hlb - handler of like button\nconst hlb = (btn, cardId) => {\n  if(statusLikeBtn(btn)) {\n    deleteLike(cardId)\n    .then((data) => {\n      updateLike(btn, data);\n      console.log('дизлайк \\n' + 'счетчик: ' + data.likes.length);\n    })\n    .catch((err) => console.log(err));\n  } else {\n    putLike(cardId)\n    .then((data) => {\n      updateLike(btn, data);\n      console.log('лайк \\n' + 'счетчик: ' + data.likes.length);\n    })\n    .catch((err) => console.log(err));\n  }\n};\n\nenableValidation(config); "],"names":["openPopup","popup","classList","add","document","addEventListener","escapeHandler","closeByOverlay","closePopup","remove","removeEventListener","evt","key","querySelector","item","target","currentTarget","createCard","cardContent","user","showImage","hdc","hlb","cardItem","content","cloneNode","cardImage","cardTitle","deleteButton","likeButton","likeCount","src","link","alt","name","textContent","owner","_id","style","display","disabled","likes","some","id","length","updateLike","btn","count","toggle","nextElementSibling","config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","concat","status","hideError","formElement","inputElement","errorElement","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","value","formSelector","editButton","addButton","closeButtons","avatarButton","popupEdit","popupNewCard","popupImage","popupAvatar","popups","editProfile","forms","newPlace","newAvatar","profileTitle","profileDescription","profileAvatar","placesList","contains","image","caption","createImagePopup","renderLoad","isLoad","form","button","description","closest","newName","newDecription","preventDefault","fetch","method","body","JSON","stringify","about","then","data","console","log","catch","err","finally","newLink","placeName","card","prepend","reset","avatar","editAvatar","background","all","_ref","_ref2","cards","append","cardId","deleteCardAPI","element","message","deleteLike","putLike","patternMismatch","setCustomValidity","dataset","errorMessage","showError","validationMessage","isValid","setEventListeners","enableValidation"],"sourceRoot":""}